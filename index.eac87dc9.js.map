{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAKQ,EAMA,EAXF,EAAiB,SAAC,CAAxB,EACE,OAAO,OAAO,EAAa,OAAO,CAAC,QAAS,IAC9C,EAuBM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAe,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IApBvC,EAAa,AAsBZ,EAtBiB,IAAI,CAC1B,SAAC,CAAA,CAAO,CADV,EAEI,OAAA,EAAe,EAAM,OAAO,CAAC,MAAM,EACnC,EAAe,EAAM,OAAO,CAAC,MAAM,C,GAGjC,EAAgB,SAAS,aAAa,CAAC,MAE7C,EAAW,OAAO,CAAC,SAAC,CAApB,EAA6B,OAAA,EAAc,MAAM,CAAC,E,GAI3C,AAWI,EAXC,GAAG,CAAC,SAAC,CAAjB,EAA2B,MAAA,CACzB,KAAM,EAAK,WAAW,CACtB,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAK,OAAO,CAAC,MAAM,CAC3B,IAAK,EAAK,OAAO,CAAC,GAAG,AACvB,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar stringToNumber = function(salaryString) {\n    return Number(salaryString.replace(/[$,]/g, \"\"));\n};\nvar sortList = function(list) {\n    var sortedList = list.sort(function(item1, item2) {\n        return stringToNumber(item2.dataset.salary) - stringToNumber(item1.dataset.salary);\n    });\n    var listContainer = document.querySelector(\"ul\");\n    sortedList.forEach(function(item) {\n        return listContainer.append(item);\n    });\n};\nvar getEmployees = function(list) {\n    return list.map(function(item) {\n        return {\n            name: item.textContent,\n            position: item.dataset.position,\n            salary: item.dataset.salary,\n            age: item.dataset.age\n        };\n    });\n};\nvar listOfLi = _to_consumable_array(document.querySelectorAll(\"li\"));\nsortList(listOfLi);\ngetEmployees(listOfLi);\n\n//# sourceMappingURL=index.eac87dc9.js.map\n","'use strict';\n\nconst stringToNumber = (salaryString) => {\n  return Number(salaryString.replace(/[$,]/g, ''));\n};\n\nconst sortList = (list) => {\n  const sortedList = list.sort(\n    (item1, item2) =>\n      stringToNumber(item2.dataset.salary) -\n      stringToNumber(item1.dataset.salary),\n  );\n\n  const listContainer = document.querySelector('ul');\n\n  sortedList.forEach((item) => listContainer.append(item));\n};\n\nconst getEmployees = (list) => {\n  return list.map((item) => ({\n    name: item.textContent,\n    position: item.dataset.position,\n    salary: item.dataset.salary,\n    age: item.dataset.age,\n  }));\n};\n\nconst listOfLi = [...document.querySelectorAll('li')];\n\nsortList(listOfLi);\ngetEmployees(listOfLi);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","sortedList","listContainer","stringToNumber","salaryString","Number","replace","listOfLi","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","list","sort","item1","item2","dataset","salary","querySelector","forEach","item","append","map","textContent","position","age"],"version":3,"file":"index.eac87dc9.js.map"}